upstream uploader {
    server 			marathon.mesos service=_uploader._tcp resolve;
    zone backend 	64k;
    least_time 		last_byte;
    keepalive 		300;
}
    

server {
    listen              80;
    listen              443 ssl http2;
    server_name  uploader.mesos.ps.nginxlab.com uploader.ngra.ps.nginxlab.com uploader.mra.ps.nginxlab.com localhost.uploader;

    ssl_certificate      /etc/letsencrypt/live/mesos.ps.nginxlab.com-0001/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/mesos.ps.nginxlab.com-0001/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/mesos.ps.nginxlab.com-0001/chain.pem;

    include		nginx-ssl.conf;
    rewrite_log on;
    
    status_zone auth_proxy;
    
    keepalive_timeout	3600s;
    keepalive_disable	none;
    keepalive_requests  100000;


    location / {
        proxy_pass https://uploader;
        proxy_set_header Host uploader.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600;
        proxy_connect_timeout  		3600;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
    }
    
    location /health-check-uploader	{
        internal;
        proxy_set_header Host uploader.marathon.mesos;
        proxy_pass https://uploader;
        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600s;
        proxy_connect_timeout  		3600s;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
    
        health_check uri=/ match=uploader-conditions fails=1;
    }
}

    match uploader-conditions {
		status 200-399;
    	body ~ 'Hello World';
	}

