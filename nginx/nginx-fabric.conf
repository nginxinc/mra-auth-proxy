########### Jinja2 Macro for Proxy Servers ###############





error_log /var/log/nginx/error.log debug;
worker_processes  auto;

events {
  worker_connections  1024;
}

daemon off;

http {

    include mime.types;
    include nginx-gz.conf;

    resolver 198.51.100.1 198.51.100.2 198.51.100.3 valid=3s;  #use local DNS and override TTL to whatever value makes sense
    resolver_timeout 10s;
    client_max_body_size 30M;
    
    proxy_cache_path /app/cache levels=1:2 keys_zone=oauth_cache:10m max_size=10m inactive=15s use_temp_path=off;

    #DDOS Configs
    limit_req_zone $binary_remote_addr zone=ddosrequests:25m rate=100r/s;
    limit_conn_zone $binary_remote_addr zone=ddosconnections:25m;

    
    upstream uploader {
        server        marathon.mesos service=_uploader._tcp resolve;
        zone backend  64k;
        least_time 		last_byte;
        keepalive 		300;
    }
    
    upstream user-manager {
        server        marathon.mesos service=_user-manager._tcp resolve;
        zone backend  64k;
        least_time 		last_byte;
        keepalive 		300;
    }
    
    upstream album-manager {
        server        marathon.mesos service=_album-manager._tcp resolve;
        zone backend  64k;
        least_time 		last_byte;
        keepalive 		300;
    }

    upstream content-service {
            server        marathon.mesos service=_content-service._tcp resolve;
            zone backend  64k;
            least_time 		last_byte;
            keepalive 		300;
        }
    
    upstream router-mesh {
        server        router-mesh.marathon.mesos:8889 resolve;
        zone backend  64k;
        least_time 		last_byte;
        keepalive 		300;
    }
    
    upstream resizer {
        server        marathon.mesos service=_resizer._tcp resolve;
        zone backend  64k;
        least_time 		last_byte;
        keepalive 		300;
    }
    
    upstream pages {
        server        marathon.mesos service=_pages._tcp resolve;
        zone backend  64k;
        least_time 		last_byte;
        keepalive 		300;
    }
    

    server {
        listen 80;

        location /v1/users {
			#proxy_cache oauth_cache;
			#proxy_cache_min_uses 3;
            proxy_pass https://user-manager;
            proxy_set_header Host user-manager.marathon.mesos;

            proxy_ssl_session_reuse 	on;
			proxy_ssl_protocols         TLSv1.2;
			#proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
			proxy_ssl_verify 			off;
			proxy_read_timeout     		3600;
 			proxy_connect_timeout  		3600;

			# Default is HTTP/1, keepalive is only enabled in HTTP/1.1
			proxy_http_version 1.1;
			proxy_set_header Connection "";
			proxy_set_header Accept-Encoding "";
			#allow 173.186.135.1/24;
			#allow 127.0.0.1;
    		#deny  all;
	    }

        location / {
            return         301 https://$host$request_uri;
        }
    }

    server {
        listen       443 ssl http2	default_server;

        ssl_certificate      /etc/letsencrypt/live/mra.nginxps.com/fullchain.pem;
        ssl_certificate_key  /etc/letsencrypt/live/mra.nginxps.com/privkey.pem;
        ## verify chain of trust of OCSP response using Root CA and Intermediate certs
        ssl_trusted_certificate /etc/letsencrypt/live/mra.nginxps.com/chain.pem;
        include nginx-ssl.conf;

        keepalive_timeout	3600s;
        keepalive_disable	none;
        keepalive_requests  100000;

        server_name auth-proxy;
        status_zone auth-proxy;

        

        include default-location.conf;

			#DDOS Configs
			limit_req zone=ddosrequests burst=150 nodelay;
            #should only be used when under attack.
            #limit_conn ddosconnections 100;
            #set non-default response code to indicate no response and closed connection
            limit_req_status 444;


        
            location /pages/ {
        #auth_request /auth-proxy;
        proxy_pass https://pages/;
        proxy_set_header Host pages;

        proxy_ssl_session_reuse     on;
        proxy_ssl_protocols         TLSv1.2;
        proxy_ssl_verify            off;
        proxy_read_timeout          3600;
        proxy_connect_timeout       3600;

        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";

        #DDOS Configs
        limit_req zone=ddosrequests burst=150 nodelay;
        #should only be used when under attack.
        #limit_conn ddosconnections 100;
        #set non-default response code to indicate no response and closed connection
        limit_req_status 444;

        
    }
        

        location = /status.html {
            root /usr/share/nginx/html/;
        }

        location /status {
            status;
        }
    }
    
    
            server {
    listen              80;
    listen              443 ssl http2;
    server_name  uploader.mra.nginxps.com;

    ssl_certificate      /etc/letsencrypt/live/mra.nginxps.com/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/mra.nginxps.com/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/mra.nginxps.com/chain.pem;

    include		nginx-ssl.conf;
    rewrite_log on;
    
    status_zone uploader;
    
    keepalive_timeout	3600s;
    keepalive_disable	none;
    keepalive_requests  100000;


    location / {
        proxy_pass https://uploader;
        proxy_set_header Host uploader.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600;
        proxy_connect_timeout  		3600;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
    }

    location /health-check-uploader	{
        internal;
        proxy_pass https://uploader;
        proxy_set_header Host uploader.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600s;
        proxy_connect_timeout  		3600s;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
        proxy_set_header Auth-ID 'test';
    
        
          health_check interval=2s fails=1 uri=/;
        
    }
}
    
            server {
    listen              80;
    listen              443 ssl http2;
    server_name  user-manager.mra.nginxps.com;

    ssl_certificate      /etc/letsencrypt/live/mra.nginxps.com/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/mra.nginxps.com/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/mra.nginxps.com/chain.pem;

    include		nginx-ssl.conf;
    rewrite_log on;
    
    status_zone user-manager;
    
    keepalive_timeout	3600s;
    keepalive_disable	none;
    keepalive_requests  100000;


    location / {
        proxy_pass https://user-manager;
        proxy_set_header Host user-manager.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600;
        proxy_connect_timeout  		3600;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
    }

    location /health-check-user-manager	{
        internal;
        proxy_pass https://user-manager;
        proxy_set_header Host user-manager.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600s;
        proxy_connect_timeout  		3600s;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
        proxy_set_header Auth-ID 'test';
    
        
          health_check interval=2s fails=1 uri=/v1/;
        
    }
}
    
            server {
    listen              80;
    listen              443 ssl http2;
    server_name  album-manager.mra.nginxps.com;

    ssl_certificate      /etc/letsencrypt/live/mra.nginxps.com/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/mra.nginxps.com/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/mra.nginxps.com/chain.pem;

    include		nginx-ssl.conf;
    rewrite_log on;
    
    status_zone album-manager;
    
    keepalive_timeout	3600s;
    keepalive_disable	none;
    keepalive_requests  100000;


    location / {
        proxy_pass https://album-manager;
        proxy_set_header Host album-manager.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600;
        proxy_connect_timeout  		3600;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
    }

    location /health-check-album-manager	{
        internal;
        proxy_pass https://album-manager;
        proxy_set_header Host album-manager.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600s;
        proxy_connect_timeout  		3600s;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
        proxy_set_header Auth-ID 'test';
    
        
          health_check interval=2s fails=1 uri=/;
        
    }
}

server {
    listen              80;
    listen              443 ssl http2;
    server_name  content-service.mra.nginxps.com;

    ssl_certificate      /etc/letsencrypt/live/mra.nginxps.com/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/mra.nginxps.com/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/mra.nginxps.com/chain.pem;

    include		nginx-ssl.conf;
    rewrite_log on;

    status_zone content-service;

    keepalive_timeout	3600s;
    keepalive_disable	none;
    keepalive_requests  100000;


    location / {
        proxy_pass https://content-service;
        proxy_set_header Host content-service.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600;
        proxy_connect_timeout  		3600;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
    }

    location /health-check-content-service	{
        internal;
        proxy_pass https://content-service;
        proxy_set_header Host content-service.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600s;
        proxy_connect_timeout  		3600s;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
        proxy_set_header Auth-ID 'test';


          health_check interval=2s fails=1 uri=/;

    }
}
    
            server {
    listen              80;
    listen              443 ssl http2;
    server_name  router-mesh.mra.nginxps.com;

    ssl_certificate      /etc/letsencrypt/live/mra.nginxps.com/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/mra.nginxps.com/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/mra.nginxps.com/chain.pem;

    include		nginx-ssl.conf;
    rewrite_log on;
    
    status_zone router-mesh;
    
    keepalive_timeout	3600s;
    keepalive_disable	none;
    keepalive_requests  100000;


    location / {
        proxy_pass https://router-mesh;
        proxy_set_header Host router-mesh.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600;
        proxy_connect_timeout  		3600;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
    }

    location /health-check-router-mesh	{
        internal;
        proxy_pass https://router-mesh;
        proxy_set_header Host router-mesh.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600s;
        proxy_connect_timeout  		3600s;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
        proxy_set_header Auth-ID 'test';
    
        
          health_check interval=2s fails=1 uri=/;
        
    }
}
    
            server {
    listen              80;
    listen              443 ssl http2;
    server_name  resizer.mra.nginxps.com;

    ssl_certificate      /etc/letsencrypt/live/mra.nginxps.com/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/mra.nginxps.com/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/mra.nginxps.com/chain.pem;

    include		nginx-ssl.conf;
    rewrite_log on;
    
    status_zone resizer;
    
    keepalive_timeout	3600s;
    keepalive_disable	none;
    keepalive_requests  100000;


    location / {
        proxy_pass https://resizer;
        proxy_set_header Host resizer.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600;
        proxy_connect_timeout  		3600;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
    }

    location /health-check-resizer	{
        internal;
        proxy_pass https://resizer;
        proxy_set_header Host resizer.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600s;
        proxy_connect_timeout  		3600s;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
        proxy_set_header Auth-ID 'test';
    
        
          health_check interval=2s fails=1 uri=/healthcheck;
        
    }
}
    
            server {
    listen              80;
    listen              443 ssl http2;
    server_name  pages.mra.nginxps.com;

    ssl_certificate      /etc/letsencrypt/live/mra.nginxps.com/fullchain.pem;
    ssl_certificate_key  /etc/letsencrypt/live/mra.nginxps.com/privkey.pem;
    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/mra.nginxps.com/chain.pem;

    include		nginx-ssl.conf;
    rewrite_log on;
    
    status_zone pages;
    
    keepalive_timeout	3600s;
    keepalive_disable	none;
    keepalive_requests  100000;


    location / {
        proxy_pass https://pages;
        proxy_set_header Host pages.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600;
        proxy_connect_timeout  		3600;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
    }

    location /health-check-pages	{
        internal;
        proxy_pass https://pages;
        proxy_set_header Host pages.marathon.mesos;

        proxy_ssl_session_reuse 	on;
        proxy_ssl_protocols         TLSv1.2;
        #proxy_ssl_ciphers           'ECDHE-RSA-AES128-GCM-SHA256';
        proxy_ssl_verify 			off;
        proxy_read_timeout     		3600s;
        proxy_connect_timeout  		3600s;

        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_set_header Accept-Encoding "";
        proxy_set_header Auth-ID 'test';
    
        
          health_check interval=2s fails=1 uri=/;
        
    }
}
    
}
